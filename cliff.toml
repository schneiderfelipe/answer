# configuration file for git-cliff
# see https://github.com/orhun/git-cliff#configuration-file

[changelog]
# changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
The format is (loosely) based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n
Do not change it, it is updated automatically.\n
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% if previous %}\
    {% if previous.commit_id %}
        [{{ previous.commit_id | truncate(length=7, end="") }}](https://github.com/schneiderfelipe/getanswer/commit/{{ previous.commit_id }})...\
            [{{ commit_id | truncate(length=7, end="") }}](https://github.com/schneiderfelipe/getanswer/commit/{{ commit_id }})
    {% endif %}\
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for scope, commits in commits | group_by(attribute="scope") %}
        `{{ scope }}`:
        {% for commit in commits %}
            - {{ commit.message | upper_first }} ([{{ commit.id | truncate(length=7, end="") }}](https://github.com/schneiderfelipe/getanswer/commit/{{ commit.id }}))\
        {% endfor %}
    {% endfor %}
{% endfor %}\n
"""
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """
<!-- generated by git-cliff -->
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/schneiderfelipe/getanswer/pull/${2}))" },                                               # replace pull request numbers
  { pattern = '([Rr]esolve[ds]?|[Cc]lose[ds]?|[Ff]ixe[ds]|[Ff]ix)\s+#([0-9]+)', replace = "${1} [#${2}](https://github.com/schneiderfelipe/getanswer/issues/${2})" },
]
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^build", group = "👷 Building" },
  { message = "^ci", group = "🚀 Continuous Integration" },
  { message = "^doc", group = "📝 Documentation" },
  { message = "^feat", group = "🌟 Features" },
  { message = "^fix", group = "🐛 Bug Fixes" },
  { message = "^perf", group = "⚡️ Performance" },
  { message = "^refactor", group = "♻️ Refactor" },
  { message = "^revert", group = "⏪️ Revert" },
  { message = "^style", group = "🎨 Styling" },
  { message = "^test", group = "🚦 Testing" },
  { body = ".*security", group = "🔒️ Security" },
  { message = "^chore: Changelog", skip = true },
  { message = "^chore\\(changelog\\): update", skip = true },
  { message = "^chore: Release", skip = true, group = "🔖 Release" },
  { message = "^chore\\(release\\): prepare for", skip = true, group = "🔖 Release" },
  { message = "^chore", group = "🏗️ Miscellaneous Tasks" },
]
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = false
# glob pattern for matching git tags
tag_pattern = "*v[0-9].[0-9].[0-9]*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"
# regex for ignoring tags
ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
# limit the number of commits included in the changelog.
# limit_commits = 42
